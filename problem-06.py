# -*- coding: utf-8 -*-

# """Untitled14.ipynb

# Automatically generated by Colab.

# Original file is located at
#     https://colab.research.google.com/drive/1oLDWBLVFT-DFvjhLlykZO2AilcTheift
# """

from math import gcd

def generate_houses(max_distance=300):
    houses = []
    seen = set()  # To track visible houses

    for x in range(1, max_distance + 1):
        for y in range(1, max_distance + 1):
            g = gcd(x, y)
            slope = (x // g, y // g)

            # If this slope hasn't been seen, it's a visible house
            if slope not in seen:
                seen.add(slope)
                houses.append((x + y, x, y))  # Store the house (Manhattan Distance, x, y)

    # Sort houses first by Manhattan distance, then by x-coordinate
    houses.sort()

    return houses

# Precompute houses
houses = generate_houses()

def solve(N):
    # Return the coordinates of the N-th house (1-based index)
    return houses[N - 1][1], houses[N - 1][2]

# Input handling
T = int(input())  # Number of test cases
for _ in range(T):
    N = int(input())  # Address to find
    x, y = solve(N)
    print(x, y)
